/**
 * 
 */
package com.chinamobile.hnu.xiangyu.user.service;

import java.util.Date;
import java.util.List;

import com.chinamobile.hnu.xiangyu.user.pojo.UserAccount;
import com.chinamobile.hnu.xiangyu.user.vo.UserVo;
import com.chinamobile.hnu.xiangyu.util.dto.Page;

/**
 * @author songcl
 * @date 2018年5月18日
 */
public interface UserAccountService {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_account
	 *
	 * @mbg.generated Thu May 17 23:34:42 CST 2018
	 */
	int insert(UserAccount record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_account
	 *
	 * @mbg.generated Thu May 17 23:34:42 CST 2018
	 */
	int insertSelective(UserAccount record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_account
	 *
	 * @mbg.generated Thu May 17 23:34:42 CST 2018
	 */
	UserAccount selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_account
	 *
	 * @mbg.generated Thu May 17 23:34:42 CST 2018
	 */
	int updateByPrimaryKeySelective(UserAccount record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table user_account
	 *
	 * @mbg.generated Thu May 17 23:34:42 CST 2018
	 */
	int updateByPrimaryKey(UserAccount record);

	/**
	 * 检查电话号码是否已被注册
	 * 
	 * @param phone
	 * @return true：已存在，false：不存在
	 */
	boolean checkPhone(String phone);

	/**
	 * 通过手机号码查询用户
	 * 
	 * @param phone
	 * @return
	 */
	UserAccount findByPhone(String phone);

	/**
	 * 验证密码
	 * 
	 * @param userId
	 * @param pwd
	 * @return 如果匹配，则返回true，否则返回false
	 */
	boolean verifyPwd(Integer userId, String password);

	/**
	 * 通过uid更新密码
	 * 
	 * @param userId
	 * @param password
	 */
	void updatePassword(Integer userId, String password);

	/**
	 * 通过手机号码重置密码
	 * 
	 * @param phone
	 * @param password
	 */
	void updatePassword(String phone, String password);

	/**
	 * 检查用户的enable/disable状态
	 * 
	 * @param uid
	 * @return true：eanbled；false：disabled
	 */
	boolean checkEnabled(Integer userId);

	/**
	 * 更新账户的enabled/disabled状态
	 * 
	 * @param uid
	 * @param enabled
	 *            true：eanbled；false：disabled
	 */
	void updateEanbled(Integer userId, boolean enabled);

	/**
	 * 更新最后登录时间
	 * 
	 * @param userId
	 * @param loginDate
	 */
	void updateLoginTime(Integer userId, Date loginTime);

	/**
	 * 用户列表
	 * 
	 * @param pageCurrent
	 * @param pageSize
	 */
	Page<UserVo> selectUserList(Integer pageCurrent, Integer pageSize);

	/**
	 * 认证
	 * 
	 * @param userId
	 * @param type
	 */
	int updateUserStatus(Integer userId, Integer type);

	/**
	 * 通过昵称查询用户
	 * @param nickname
	 * @return
	 */
	UserAccount selectByNickname(String nickname);

	/**
	 * 专家列表
	 * 
	 * @return
	 */
	List<UserAccount> selectExpertList();
}
