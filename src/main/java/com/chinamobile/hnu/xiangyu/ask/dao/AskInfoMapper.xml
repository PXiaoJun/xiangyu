<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinamobile.hnu.xiangyu.ask.dao.AskInfoMapper">
	<resultMap id="BaseResultMap" type="com.chinamobile.hnu.xiangyu.ask.pojo.AskInfo">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
		<result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="presentor" jdbcType="INTEGER" property="presentor" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="like_amount" jdbcType="INTEGER" property="likeAmount" />
		<result column="comment_amount" jdbcType="INTEGER" property="commentAmount" />
		<result column="visit_amount" jdbcType="INTEGER" property="visitAmount" />
		<result column="yesterday_visit_amount" jdbcType="INTEGER"
			property="yesterdayVisitAmount" />
		<result column="anonymity" jdbcType="TINYINT" property="anonymity" />
		<result column="special_id" jdbcType="INTEGER" property="specialId" />
		<result column="status" jdbcType="TINYINT" property="status" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		id, gmt_create, gmt_modified, name, presentor, content, like_amount,
		comment_amount,
		visit_amount, yesterday_visit_amount, anonymity,
		special_id, status
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		select
		<include refid="Base_Column_List" />
		from ask_info
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		delete from ask_info
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.chinamobile.hnu.xiangyu.ask.pojo.AskInfo">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		insert into ask_info (id, gmt_create, gmt_modified,
		name, presentor,
		content,
		like_amount, comment_amount, visit_amount,
		yesterday_visit_amount, anonymity, special_id,
		status)
		values
		(#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP},
		#{gmtModified,jdbcType=TIMESTAMP},
		#{name,jdbcType=VARCHAR},
		#{presentor,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
		#{likeAmount,jdbcType=INTEGER}, #{commentAmount,jdbcType=INTEGER},
		#{visitAmount,jdbcType=INTEGER},
		#{yesterdayVisitAmount,jdbcType=INTEGER},
		#{anonymity,jdbcType=TINYINT}, #{specialId,jdbcType=INTEGER},
		#{status,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective" parameterType="com.chinamobile.hnu.xiangyu.ask.pojo.AskInfo"
		useGeneratedKeys="true" keyProperty="id">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		insert into ask_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test="gmtModified != null">
				gmt_modified,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="presentor != null">
				presentor,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="likeAmount != null">
				like_amount,
			</if>
			<if test="commentAmount != null">
				comment_amount,
			</if>
			<if test="visitAmount != null">
				visit_amount,
			</if>
			<if test="yesterdayVisitAmount != null">
				yesterday_visit_amount,
			</if>
			<if test="anonymity != null">
				anonymity,
			</if>
			<if test="specialId != null">
				special_id,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="gmtCreate != null">
				#{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModified != null">
				#{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="presentor != null">
				#{presentor,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="likeAmount != null">
				#{likeAmount,jdbcType=INTEGER},
			</if>
			<if test="commentAmount != null">
				#{commentAmount,jdbcType=INTEGER},
			</if>
			<if test="visitAmount != null">
				#{visitAmount,jdbcType=INTEGER},
			</if>
			<if test="yesterdayVisitAmount != null">
				#{yesterdayVisitAmount,jdbcType=INTEGER},
			</if>
			<if test="anonymity != null">
				#{anonymity,jdbcType=TINYINT},
			</if>
			<if test="specialId != null">
				#{specialId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.chinamobile.hnu.xiangyu.ask.pojo.AskInfo">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		update ask_info
		<set>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtModified != null">
				gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="presentor != null">
				presentor = #{presentor,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="likeAmount != null">
				like_amount = #{likeAmount,jdbcType=INTEGER},
			</if>
			<if test="commentAmount != null">
				comment_amount = #{commentAmount,jdbcType=INTEGER},
			</if>
			<if test="visitAmount != null">
				visit_amount = #{visitAmount,jdbcType=INTEGER},
			</if>
			<if test="yesterdayVisitAmount != null">
				yesterday_visit_amount =
				#{yesterdayVisitAmount,jdbcType=INTEGER},
			</if>
			<if test="anonymity != null">
				anonymity = #{anonymity,jdbcType=TINYINT},
			</if>
			<if test="specialId != null">
				special_id = #{specialId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.chinamobile.hnu.xiangyu.ask.pojo.AskInfo">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu May 17 
			23:34:42 CST 2018. -->
		update ask_info
		set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
		gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
		name =
		#{name,jdbcType=VARCHAR},
		presentor = #{presentor,jdbcType=INTEGER},
		content = #{content,jdbcType=VARCHAR},
		like_amount =
		#{likeAmount,jdbcType=INTEGER},
		comment_amount =
		#{commentAmount,jdbcType=INTEGER},
		visit_amount =
		#{visitAmount,jdbcType=INTEGER},
		yesterday_visit_amount =
		#{yesterdayVisitAmount,jdbcType=INTEGER},
		anonymity =
		#{anonymity,jdbcType=TINYINT},
		special_id =
		#{specialId,jdbcType=INTEGER},
		status = #{status,jdbcType=TINYINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="selectPage" parameterType="map"
		resultType="com.chinamobile.hnu.xiangyu.ask.vo.AskInfoVo">
		<!-- 最新 -->
		<if test="type == 2">
			SELECT
			ai.id,
			ai.name as title,
			ai.presentor,
			ai.content,
			ai.anonymity,
			ai.special_id as specialId ,
			ai.like_amount as likeAmount,
			ai.comment_amount as commentAmount,
			ai.gmt_create as gmtCreate,
			ai.`status`,
			ua.header,
			ua.nickname as nn,
			ua.id as uid
			FROM
			ask_info ai
			LEFT JOIN user_account ua on ua.id = ai.presentor
			where ai.`status` =
			0
			AND ai.special_id = 0

			<if test="idList != null">
				and ai.id in
				<foreach collection="idList" item="id" open="(" close=")"
					separator=",">
					#{id}
				</foreach>
			</if>
			<if test="name != null and name != '' ">
				AND ai.name like CONCAT('%',#{name},'%')
			</if>
			<choose>
				<when test="idList != null">
					order by field(ai.id,
					<foreach collection="idList" item="id"
						separator=",">
						#{id}
					</foreach>
					)
				</when>
				<otherwise>
					ORDER BY ai.gmt_create desc
				</otherwise>
			</choose>


		</if>
		<!-- 推荐 -->
		<if test="type == 1">
			SELECT
			ai.id,
			ai.name as title,
			ai.presentor,
			ai.content,
			ai.anonymity,
			ai.special_id as specialId ,
			ai.like_amount as likeAmount,
			ai.comment_amount as commentAmount,
			ai.gmt_create as gmtCreate,
			ai.`status`,
			ua.header,
			ua.nickname as nn,
			ua.id as uid
			FROM
			ask_info ai
			LEFT JOIN user_account ua on ua.id = ai.presentor
			left join ask_label
			t3 on ai.id = t3.ask_id
			where ai.`status` = 0
			AND ai.special_id = 0
			and
			t3.name in
			<foreach collection="labels" item="item" open="(" close=")"
				separator=",">
				#{item.label}
			</foreach>
			order by ai.id desc
		</if>
		<!-- 最热 -->
		<if test="type == 3">
			SELECT
			ai.id,
			ai.name as title,
			ai.presentor,
			ai.content,
			ai.anonymity,
			ai.special_id as specialId ,
			ai.like_amount as likeAmount,
			ai.comment_amount as commentAmount,
			ai.gmt_create as gmtCreate,
			ai.`status`,
			ua.header,
			ua.nickname as nn,
			ua.id as uid
			FROM
			ask_info ai
			LEFT JOIN user_account ua on ua.id = ai.presentor
			where ai.`status` =
			0
			AND ai.special_id = 0
			<if test="idList != null">
				and ai.id in
				<foreach collection="idList" item="id" open="(" close=")"
					separator=",">
					#{id}
				</foreach>
			</if>
			<if test="name != null and name != '' ">
				AND ai.name like CONCAT('%',#{name},'%')
			</if>
						<choose>
				<when test="idList != null">
					order by field(ai.id,
					<foreach collection="idList" item="id"
						separator=",">
						#{id}
					</foreach>
					)
				</when>
				<otherwise>
					ORDER BY ai.like_amount desc
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="pgspecial" parameterType="map"
		resultType="com.chinamobile.hnu.xiangyu.ask.vo.AskInfoVo">
		SELECT
		ai.id,
		ai.name as title,
		ai.special_id as specialId,
		ai.like_amount as likeAmount,
		ai.comment_amount as commentAmount,
		ai.gmt_create as gmtCreate,
		ua.header,
		ua.nickname as nn,
		ua.id as uid
		FROM
		ask_info ai
		LEFT JOIN user_account ua on ua.id = ai.presentor
		where
		ai.special_id = #{special}
		and ai.`status` = 0
		ORDER BY ai.gmt_create
		desc
	</select>

	<select id="pgfirst" parameterType="map"
		resultType="com.chinamobile.hnu.xiangyu.ask.vo.AskInfoVo">
		SELECT
		ai.id,
		ai.name as title,
		ai.anonymity,
		ai.content,
		ai.like_amount as
		likeAmount,
		ai.comment_amount as commentAmount,
		ai.gmt_create as
		gmtCreate,
		ua.header,
		ua.nickname as nn,
		ua.id as uid
		FROM
		ask_info ai
		LEFT
		JOIN user_account ua on ua.id = ai.presentor
		where
		ai.id = #{askid}
		and
		ai.`status` = 0
		ORDER BY ai.gmt_create desc
	</select>

	<!-- 更新总的浏览数 -->
	<update id="updateVisitAmount" parameterType="java.lang.Long">
		UPDATE ask_info SET
		visit_amount=visit_amount+1 WHERE id=#{askid}
	</update>

	<update id="updateYesterdayAskByList" parameterType="list">
		<foreach collection="list" item="item" separator=";">
			update
			ask_info set yesterday_visit_amount = #{item.countNumber} where id =
			#{item.askId}
		</foreach>
	</update>


	<update id="updateYesterdayAskToZero">
		update ask_info set yesterday_visit_amount = 0
	</update>

	<!-- 我的问题列表 -->
	<select id="selectMyListPage" parameterType="map"
		resultType="com.chinamobile.hnu.xiangyu.ask.vo.AskInfoVo">
		<if test="type == 1">
			SELECT
			ai.id,
			ai.name as title,
			ai.presentor,
			ai.content,
			ai.anonymity,
			ai.special_id as specialId ,
			ai.like_amount as
			likeAmount,
			ai.comment_amount as commentAmount,
			ai.gmt_create as
			gmtCreate,
			ai.`status`,
			ua.header,
			ua.nickname as nn,
			ua.id as uid
			FROM
			ask_info ai
			LEFT JOIN user_account ua on ua.id = ai.presentor
			where
			ai.`status` = 0
			AND ai.special_id = 0
			AND ai.presentor = #{userId}
			ORDER BY ai.gmt_create desc
		</if>
		<!-- 查别人的问问 -->
		<if test="type == 2">
			SELECT
			ai.id,
			ai.name as title,
			ai.presentor,
			ai.content,
			ai.anonymity,
			ai.special_id as specialId ,
			ai.like_amount as
			likeAmount,
			ai.comment_amount as commentAmount,
			ai.gmt_create as
			gmtCreate,
			ai.`status`,
			ua.header,
			ua.nickname as nn,
			ua.id as uid
			FROM
			ask_info ai
			LEFT JOIN user_account ua on ua.id = ai.presentor
			where
			ai.`status` = 0
			AND ai.special_id = 0
			AND ai.presentor = #{uid}
			ORDER BY
			ai.gmt_create desc
		</if>
	</select>

	<!-- <select id="selectUserVisitHistoryByUserId" resultType="com.chinamobile.hnu.xiangyu.ask.vo.AskInfoVo" 
		parameterType="map"> SELECT ai.id, ai.gmt_create as gmtCreate, ai.`name` 
		as title, ai.presentor, ai.content, ai.like_amount as likeAmount, ai.comment_amount 
		as commentAmount, ai.anonymity, ai.special_id as specialId, ua.nickname as 
		nn, ua.header, ua.id as uid FROM `ask_visit_history` a LEFT JOIN ask_info 
		ai on ai.id = a.ask_id LEFT JOIN user_account ua on ua.id=ai.presentor WHERE 
		a.member_id = #{uid} and ai.special_id = 0 and ai.`status` = 0 group by ai.id 
		ORDER BY a.visit_time desc </select> -->

	<select id="selectUserVisitHistoryByUserId" parameterType="java.util.Set"
		resultType="com.chinamobile.hnu.xiangyu.ask.vo.AskInfoVo">
		SELECT
		ai.id,
		ai.gmt_create as gmtCreate,
		ai.`name` as title,
		ai.presentor,
		ai.content,
		ai.like_amount as likeAmount,
		ai.comment_amount as commentAmount,
		ai.anonymity,
		ai.special_id as
		specialId,
		ua.nickname as nn,
		ua.header,
		ua.id as uid
		FROM
		ask_info ai
		LEFT
		JOIN user_account ua on ua.id=ai.presentor
		<where>
			ai.id in
			<foreach collection="set" item="id" open="(" close=")"
				separator=",">
				#{id}
			</foreach>
			and ai.status = 0
		</where>
	</select>

	<select id="selectAskInfoList" parameterType="map"
		resultType="com.chinamobile.hnu.xiangyu.web.api.vo.ClubSpeackVo">
		SELECT
		t1.id,
		t1.gmt_create as gmtCreate,
		t1.presentor,
		t1.`name` as
		content,
		t2.nickname
		FROM
		ask_info t1
		LEFT JOIN user_account t2 on
		t1.presentor = t2.id
		where
		t1.special_id = 0
		<if test="name != null and name != ''">
			and CONCAT(t1.name,t2.nickname) like
			CONCAT('%',#{name},'%' )
		</if>
		<if test="startTime != null and endTime == null">
			and t1.gmt_create = #{startTime}
		</if>
		<if test="endTime != null and startTime == null">
			and t1.gmt_create = #{endTime}
		</if>
		<if test="startTime != null and endTime != null">
			and t1.gmt_create <![CDATA[>=]]>
			#{startTime}
			and t1.gmt_create <![CDATA[<=]]>
			#{endTime}
		</if>
		order by t1.gmt_create desc
	</select>


	<select id="selectUserCertificationList" parameterType="map"
		resultType="com.chinamobile.hnu.xiangyu.web.api.vo.UserCertificationVo">
		SELECT
		t1.user_id as userId,
		t1.`name`,
		t1.gmt_create as gmtCreate,
		t1.status,
		t2.college
		FROM
		user_certification t1
		LEFT JOIN user_account t2
		on t1.user_id = t2.id
		where 1=1
		<if test="status != null and status != ''">
			and t1.status = #{status}
		</if>
		<if test="college != null and college != ''">
			and t2.college = #{college}
		</if>
		<if
			test="startTime != null and endTime == null and startTime != '' and endTime != ''">
			and t1.gmt_create = #{startTime}
		</if>
		<if
			test="endTime != null and startTime == null  and startTime != '' and endTime != ''">
			and t1.gmt_create = #{endTime}
		</if>
		<if
			test="startTime != null and endTime != null  and startTime != '' and endTime != ''">
			and t1.gmt_create <![CDATA[>=]]>
			#{startTime}
			and t1.gmt_create <![CDATA[<=]]>
			#{endTime}
		</if>
		order by t1.gmt_create desc
	</select>

	<select id="selectByLabelPage" parameterType="map"
		resultType="com.chinamobile.hnu.xiangyu.ask.vo.AskInfoVo">
		SELECT
		t2.id,
		t2.name as title,
		t2.presentor,
		t2.content,
		t2.anonymity,
		t2.special_id as specialId ,
		t2.like_amount as likeAmount,
		t2.comment_amount as commentAmount,
		t2.gmt_create as gmtCreate,
		t2.`status`,
		t3.header,
		t3.nickname as nn,
		t3.id as uid
		FROM
		ask_label t1
		left join ask_info t2 on t1.ask_id = t2.id
		LEFT JOIN user_account t3 on
		t3.id = t2.presentor
		where
		t2.status = 0
		and t1.name = #{label}
		group by
		t2.id order by t2.visit_amount desc
	</select>
	
	<select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
		select * from ask_info where presentor = #{uid} and name = #{askName}
	</select>
	
</mapper>